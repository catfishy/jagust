scale_fill_gradient(low='white', high='dodgerblue', name='Total\nUptake\nContrib.') +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(axis.ticks=element_line(),
plot.title=element_text(size=22),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=350, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Uptake by Pattern') +
xlab('Brain Regions') +
ylab('Patterns (Mean Cortical Summary SUVR)')
print(p)
library(ggplot2)
library(reshape2)
lobe_keys = c('FRONTAL','PARIETAL','CINGULATE','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','BASALGANGLIA','LIMBIC','THALAMUS','CEREBELLUM_GRAY',
'BRAIN_STEM','CEREBELLUM_WHITE','CEREBRAL_WHITE')
patterns = read.csv('dpgmm_alpha15.37_bilateral_pattern_means.csv')
patterns$pattern = factor(patterns$pattern)
patterns$pattern = with(patterns, paste0(pattern,' (',round(mean_suvr,2),')'))
patterns.m = melt(patterns, id.vars = c("pattern","mean_suvr"))
patterns.m$variable = as.character(patterns.m$variable)
patterns.m$variable = factor(patterns.m$variable, levels=lobe_keys)
patterns.m$pattern = factor(patterns.m$pattern, levels=(patterns.m$pattern)[order(patterns.m$mean_suvr)])
p = ggplot(patterns.m, aes(variable,pattern)) +
geom_tile(aes(fill=value)) +
scale_fill_gradient(low='white', high='dodgerblue', name='Total\nUptake\nContrib.') +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(axis.ticks=element_line(),
plot.title=element_text(size=22),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Uptake by Pattern') +
xlab('Brain Regions') +
ylab('Patterns (Mean Cortical Summary SUVR)')
print(p)
library(ggplot2)
library(reshape2)
lobe_keys = c('FRONTAL','PARIETAL','CINGULATE','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','BASALGANGLIA','LIMBIC','THALAMUS','CEREBELLUM_GRAY',
'BRAIN_STEM','CEREBELLUM_WHITE','CEREBRAL_WHITE')
patterns = read.csv('dpgmm_alpha15.37_bilateral_pattern_means.csv')
patterns$pattern = factor(patterns$pattern)
patterns$pattern = with(patterns, paste0(pattern,' (',round(mean_suvr,2),')'))
patterns.m = melt(patterns, id.vars = c("pattern","mean_suvr"))
patterns.m$variable = as.character(patterns.m$variable)
patterns.m$variable = factor(patterns.m$variable, levels=lobe_keys)
patterns.m$pattern = factor(patterns.m$pattern, levels=(patterns.m$pattern)[order(patterns.m$mean_suvr)])
p = ggplot(patterns.m, aes(variable,pattern)) +
geom_tile(aes(fill=value)) +
scale_fill_gradient(low='white', high='dodgerblue', name='Total\nUptake\nContrib.') +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(axis.ticks=element_line(),
plot.title=element_text(size=22),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Uptake by Pattern') +
xlab('Brain Regions') +
ylab('Patterns (Avg. Cortical Summary SUVR)')
print(p)
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
# Import data
df_av45 = read.csv('dpgmm_alpha15.37_bilateral_AV45_ALL_longdata_continuous_slope.csv')
df_av45$CORTICAL_SUMMARY_POSITIVE = factor(df_av45$CORTICAL_SUMMARY_POSITIVE)
df_av45$RID = factor(df_av45$RID)
df_av45$group = factor(df_av45$group)
df_av45$diag_prior = factor(df_av45$diag_prior)
df_av45$APOE4_BIN = factor(df_av45$APOE4_BIN)
df_av45$Gender = factor(df_av45$Gender)
# Only keep N/SMC/EMCI/LMCI
valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('EMCI','LMCI')
#valid_diags = c('N','SMC')
df_av45 = df_av45[which(df_av45$diag_prior %in% valid_diags),]
# only keep negatives
#df_av45 = df_av45[which(df_av45$CORTICAL_SUMMARY_POSITIVE == 0),]
# only keep patterns
valid_patterns = c(1,4,22,25,9,0,34,2,19)
#df_av45 = df_av45[which(df_av45$group %in% valid_patterns),]
# pattern weight models
fm_av45_onlycs = lm(AV45_slope ~ CORTICAL_SUMMARY_prior + I(CORTICAL_SUMMARY_prior^2), family=gaussian, df_av45)
fm_av45_nopattern = lm(AV45_slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN + I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., family=gaussian, df_av45)
fm_av45 = lm(AV45_slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN +  I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + X1*APOE4_BIN + X4*APOE4_BIN + X22*APOE4_BIN + X25*APOE4_BIN + X9*APOE4_BIN + X0*APOE4_BIN + X34*APOE4_BIN + X2*APOE4_BIN + X19*APOE4_BIN + APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., family=gaussian, df_av45)
fm_av45_onlypatterns = lm(AV45_slope ~ diag_prior + X1*APOE4_BIN + X4*APOE4_BIN + X22*APOE4_BIN + X25*APOE4_BIN + X9*APOE4_BIN + X0*APOE4_BIN + X34*APOE4_BIN + X2*APOE4_BIN + X19*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., family=gaussian, df_av45)
# # pattern weight models with all patterns
# fm_av45_nopattern = lm(AV45_slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN + I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., family=gaussian, df_av45)
# fm_av45 = lm(AV45_slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN + I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + X5*APOE4_BIN + X3*APOE4_BIN + X6*APOE4_BIN + X29*APOE4_BIN + X56*APOE4_BIN + X1*APOE4_BIN + X4*APOE4_BIN + X22*APOE4_BIN + X25*APOE4_BIN + X9*APOE4_BIN + X0*APOE4_BIN + X34*APOE4_BIN + X2*APOE4_BIN + X19*APOE4_BIN + APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., family=gaussian, df_av45)
# fm_av45_onlypatterns = lm(AV45_slope ~ diag_prior + X5*APOE4_BIN + X3*APOE4_BIN + X6*APOE4_BIN + X29*APOE4_BIN + X56*APOE4_BIN + X1*APOE4_BIN + X4*APOE4_BIN + X22*APOE4_BIN + X25*APOE4_BIN + X9*APOE4_BIN + X0*APOE4_BIN + X34*APOE4_BIN + X2*APOE4_BIN + X19*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., family=gaussian, df_av45)
# summaries
fm_av45_nopattern_summary = summary(fm_av45_nopattern)
fm_av45_summary = summary(fm_av45)
fm_av45_onlypatterns_summary = summary(fm_av45_onlypatterns)
fm_av45_nopattern_summary$r.squared
fm_av45_summary$r.squared
fm_av45_onlypatterns_summary$r.squared
fm_av45_nopattern_summary$aic
fm_av45_summary$aic
fm_av45_onlypatterns_summary$aic
# anova
fm_av45_nopattern_anova = Anova(fm_av45_nopattern,type='III')
fm_av45_anova = Anova(fm_av45,type='III')
fm_av45_onlypatterns_anova = Anova(fm_av45_onlypatterns,type='III')
# fm_av45_nopattern_anova = Anova(fm_av45_nopattern,type='III')
# fm_av45_anova = Anova(fm_av45,type='III')
# fm_av45_onlypatterns_anova = Anova(fm_av45_onlypatterns,,type='III')
# anova model comparisons
fm_modelcomparison_anova = anova(fm_av45_nopattern, fm_av45, test='LRT')
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
#colors = topo.colors(length(toplot))
#pdf('fit_original_siggroups.pdf',height=11,width=10)
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'AV45_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Cortical Summary BL', ylab='Annualized AV45 Slope')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'AV45_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
toplot = c(0,1,25,22)
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
#colors = topo.colors(length(toplot))
#pdf('fit_original_siggroups.pdf',height=11,width=10)
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'AV45_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Cortical Summary BL', ylab='Annualized AV45 Slope')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'AV45_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
#dev.off()
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
#colors = topo.colors(length(toplot))
#pdf('fit_original_siggroups.pdf',height=11,width=10)
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'AV45_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Cortical Summary BL', ylab='Annualized Florbetapir Slope')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'AV45_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
#dev.off()
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
#colors = topo.colors(length(toplot))
#pdf('fit_original_siggroups.pdf',height=11,width=10)
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'AV45_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Annualized Florbetapir SUVR Slope')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'AV45_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
#dev.off()
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
#colors = topo.colors(length(toplot))
#pdf('fit_original_siggroups.pdf',height=11,width=10)
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'AV45_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'AV45_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
#dev.off()
library(ggplot2)
library(reshape2)
lobe_keys = c('FRONTAL','PARIETAL','CINGULATE','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','BASALGANGLIA','LIMBIC','THALAMUS','CEREBELLUM_GRAY',
'BRAIN_STEM','CEREBELLUM_WHITE','CEREBRAL_WHITE')
patterns = read.csv('dpgmm_alpha15.37_bilateral_pattern_means.csv')
patterns$pattern = factor(patterns$pattern)
patterns$pattern = with(patterns, paste0(pattern,' (',round(mean_suvr,2),')'))
patterns.m = melt(patterns, id.vars = c("pattern","mean_suvr"))
patterns.m$variable = as.character(patterns.m$variable)
patterns.m$variable = factor(patterns.m$variable, levels=lobe_keys)
patterns.m$pattern = factor(patterns.m$pattern, levels=(patterns.m$pattern)[order(patterns.m$mean_suvr)])
p = ggplot(patterns.m, aes(variable,pattern)) +
geom_tile(aes(fill=value)) +
scale_fill_gradient(low='white', high='dodgerblue', name='Total\nUptake\nContrib.') +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(axis.ticks=element_line(),
plot.title=element_text(size=22),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Florbetapir Uptake, by Pattern') +
xlab('Brain Regions') +
ylab('Patterns (Avg. Florbetapir Cortical Summary SUVR)')
print(p)
library(ggplot2)
data = read.csv("03.01.16_long3timepts.csv")
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
data = read.csv("03.01.16_long3timepts.csv")
data = read.csv("R/03.01.16_long3timepts.csv")
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
twotimepts
Diag.AV45_long2 <- factor(Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
attach(data)
Diag.AV45_long2 <- factor(Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
Diag.AV45_long <- factor(Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
p = ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
print(p)
print(p)
Diag.AV45_long
library(ggplot2)
data = read.csv("R/03.01.16_long3timepts.csv")
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
attach(twotimepts)
Diag.AV45_long <- factor(Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
data = read.csv("R/03.01.16_long3timepts.csv")
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
library(ggplot2)
attach(twotimepts)
Diag.AV45_long
library(ggplot2)
data = read.csv("R/03.01.16_long3timepts.csv")
Diag.AV45_long
Gender
View(data)
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
p = ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
print(p)
library(ggplot2)
data = read.csv("R/03.01.16_long3timepts.csv")
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
attach(data)
search()
search()
detach('data')
search()
detach('twotimepts')
detach('data')
detach('twotimepts')
search()
data = read.csv("R/03.01.16_long3timepts.csv")
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
Diag.AV45_long
data$Diag.AV45_long
p = ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
print(p)
print(p)
data = read.csv("R/03.01.16_long3timepts.csv")
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
p = ggplot(threetimepts,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
print(p)
ggplot(threetimepts,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
print(p)
library(ggplot2)
data = read.csv("R/03.01.16_long3timepts.csv")
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
ggplot(threetimepts,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos)
ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
data = read.csv("~/Google Drive/ADNI_shared/Andy Documentation/FDG_AV45_COG_data/03.01.16_long3timepts.csv")
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
data$Diag.AV45_long
data[complete.cases(data[Diag.AV45_long,]),]
data[complete.cases(),]
data[complete.cases(data),]
complete.cases(data[, 'Diag.AV45_long'])
data[complete.cases(data[, 'Diag.AV45_long'])]
complete.cases(data[, 'Diag.AV45_long'])
data[complete.cases(data[, 'Diag.AV45_long']),]
data = read.csv("~/Google Drive/ADNI_shared/Andy Documentation/FDG_AV45_COG_data/03.01.16_long3timepts.csv")
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
data[complete.cases(data[, 'Diag.AV45_long']),]
data[complete.cases(data[, 'Diag.AV45_long']),]
ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
data = read.csv("~/Google Drive/ADNI_shared/Andy Documentation/FDG_AV45_COG_data/03.01.16_long3timepts.csv")
data$Diag.AV45_long <- factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
data = data[complete.cases(data[, 'Diag.AV45_long']),]
ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio,group=RID)) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=factor(RID))) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID, color=factor(RID))) +
geom_line() +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID)) +
geom_line(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID)) +
geom_line(aes(color=factor(RID))) +
geom_point(aes(color=factor(RID))) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
data = read.csv("~/Google Drive/ADNI_shared/Andy Documentation/FDG_AV45_COG_data/03.01.16_long3timepts.csv")
data$Diag.AV45_long = factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
data$RID = factor(data$RID)
data = data[complete.cases(data[, 'Diag.AV45_long']),]
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID)) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID), color=RID) +
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID), color=RID) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID), color=RID) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID), color=RID) +
geom_line() +
geom_point() +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID)) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, group=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none") +
geom_jitter()
ggplot(threetimepts,aes(x=Age, y=AV45_NONTP_WMratio)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none")
ggplot(data,aes(x=Age, y=AV45_NONTP_WMratio)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line(aes(color=RID)) +
geom_point(aes(color=RID)) +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
geom_line() +
geom_point() +
theme(legend.position="none")
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none")
geom_line() +
geom_point()
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none") +
geom_line() +
geom_point()
data
data[data$Diag.AV45_long == 'SMC']
data$Diag.AV45_long
data[data$Diag.AV45_long == 'SMC']
data[data$Diag.AV45_long = 'SMC']
data[data$Diag.AV45_long == 'SMC',]
data[data$Diag.AV45_long == 'SMC',RID]
data[data$Diag.AV45_long == 'SMC',]$RID
data[data$Diag.AV45_long == 'SMC',]
smc = data[data$Diag.AV45_long == 'SMC',]
smc$RID
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none") +
geom_line() +
geom_point() +
scale_colour_manual(values=Palette1)
cbbPalette = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none") +
geom_line() +
geom_point() +
scale_colour_manual(values=cbbPalette)
scale_colour_manual(values=cbbPalette)
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none") +
geom_line() +
geom_point() +
scale_colour_manual(values=cbbPalette)
data = read.csv("~/Google Drive/ADNI_shared/Andy Documentation/FDG_AV45_COG_data/03.01.16_long3timepts.csv")
data$Diag.AV45_long = factor(data$Diag.AV45_long, levels=c("N","SMC","EMCI","LMCI","AD"))
data$RID = factor(data$RID)
data = data[complete.cases(data[, 'Diag.AV45_long']),]
threetimepts = subset(data, AV45_NONTP_3_BigRef_BIN.79>-1)
twotimepts = subset(data, AV45_NONTP_2_BigRef_BIN.79>-1)
ggplot(twotimepts,aes(x=Age, y=AV45_NONTP_WMratio, color=RID)) +
facet_grid(Diag.AV45_long ~ AV45_NONTP_WMratio_Slope_pos) +
theme(legend.position="none") +
geom_line() +
geom_point()
library(ggplot2)
