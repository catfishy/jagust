diag_str = ''
base_form = paste(target,"~",diag_str,"APOE4_BIN + Age.AV1451 + Gender + Edu..Yrs.")
braak_form = paste(target,"~",diag_str,"APOE4_BIN + Age.AV1451 + Gender + Edu..Yrs.",braak_str)
pattern_form = paste(target,"~",diag_str,"APOE4_BIN + Age.AV1451 + Gender + Edu..Yrs.",patterns_str)
naive_form = paste(target,"~",diag_str,"APOE4_BIN + Age.AV1451 + Gender + Edu..Yrs.",naive_str)
full_form = paste(target,"~",diag_str,"APOE4_BIN + Age.AV1451 + Gender + Edu..Yrs.",patterns_str,braak_str)
# onlypattern_form = str_replace(paste(target,"~",paste(all.addons,collapse=' ')),"\\+ ","")
# LARS lasso
braak_x = getxy(braak_form,df_av1451)
y = as.numeric(df_av1451[,target])
braak.lars.model = lars(braak_x,y,type='lasso')
braak.lars.test = covTest(braak.lars.model,braak_x,y)$results
braak.lars.sigcoef.idx = braak.lars.test[braak.lars.test[,'P-value'] < 0.1 & !is.na(braak.lars.test[,'P-value']),'Predictor_Number']
braak.lars.coef = coef(braak.lars.model, s=which.min(summary(braak.lars.model)$Cp), mode='step')
braak.lars.r2 = braak.lars.model$R2[which.min(summary(braak.lars.model)$Cp)]
braak.lars.sigcoef = braak.lars.coef[braak.lars.sigcoef.idx]
braak.lars.nonzerocoef = braak.lars.coef[braak.lars.coef != 0]
pattern_x = getxy(pattern_form,df_av1451)
y = as.numeric(df_av1451[,target])
pattern.lars.model = lars(pattern_x,y,type='lasso')
pattern.lars.test = covTest(pattern.lars.model,pattern_x,y)$results
pattern.lars.sigcoef.idx = pattern.lars.test[pattern.lars.test[,'P-value'] < 0.1 & !is.na(pattern.lars.test[,'P-value']),'Predictor_Number']
pattern.lars.coef = coef(pattern.lars.model, s=which.min(summary(pattern.lars.model)$Cp), mode='step')
pattern.lars.r2 = pattern.lars.model$R2[which.min(summary(pattern.lars.model)$Cp)]
pattern.lars.sigcoef = pattern.lars.coef[pattern.lars.sigcoef.idx]
pattern.lars.nonzerocoef = pattern.lars.coef[pattern.lars.coef != 0]
braak.lars.sigcoef
pattern.lars.sigcoef
pattern.lars.r2
braak.lars.r2
rfe.braak = run.rfe(braak_form, target, df_av1451, 2)
rfe.pattern = run.rfe(pattern_form, target, df_av1451, 2)
fm_braak = rfe.braak$fit
fm_pattern = rfe.pattern$fit
rfe.braak
rfe.pattern
target
fm_braak.summary = summary(fm_braak)
fm_pattern.summary = summary(fm_pattern)
fm_braak.fit = sem.model.fits(fm_braak)
fm_pattern.fit = sem.model.fits(fm_pattern)
fm_braak.fit
fm_pattern.fit
fm_pattern.summary
fm_braak.summary
braak_x = getxy(braak_form,df_av1451)
y = as.numeric(df_av1451[,target])
braak.lars.model = lars(braak_x,y,type='lasso')
braak.lars.test = covTest(braak.lars.model,braak_x,y)$results
braak.lars.sigcoef.idx = braak.lars.test[braak.lars.test[,'P-value'] < 0.1 & !is.na(braak.lars.test[,'P-value']),'Predictor_Number']
braak.lars.coef = coef(braak.lars.model, s=which.min(summary(braak.lars.model)$Cp), mode='step')
braak.lars.r2 = braak.lars.model$R2[which.min(summary(braak.lars.model)$Cp)]
braak.lars.sigcoef = braak.lars.coef[braak.lars.sigcoef.idx]
braak.lars.nonzerocoef = braak.lars.coef[braak.lars.coef != 0]
pattern_x = getxy(pattern_form,df_av1451)
y = as.numeric(df_av1451[,target])
pattern.lars.model = lars(pattern_x,y,type='lasso')
pattern.lars.test = covTest(pattern.lars.model,pattern_x,y)$results
pattern.lars.sigcoef.idx = pattern.lars.test[pattern.lars.test[,'P-value'] < 0.1 & !is.na(pattern.lars.test[,'P-value']),'Predictor_Number']
pattern.lars.coef = coef(pattern.lars.model, s=which.min(summary(pattern.lars.model)$Cp), mode='step')
pattern.lars.r2 = pattern.lars.model$R2[which.min(summary(pattern.lars.model)$Cp)]
pattern.lars.sigcoef = pattern.lars.coef[pattern.lars.sigcoef.idx]
pattern.lars.nonzerocoef = pattern.lars.coef[pattern.lars.coef != 0]
braak.lars.sigcoef
pattern.lars.sigcoef
braak.lars.r2
pattern.lars.r2
target
>>>>>>> 2bf435541afe605313eb38135433db6a766b8dd3
table(df_av45$Diag.AV45)
table(df_av45$Gender)
df_av45$Age.AV45
mean(df_av45$Age.AV45)
std(df_av45$Age.AV45)
sd(df_av45$Age.AV45)
mean(df_av45$Edu..Yrs.)
df_av45$Edu..Yrs.
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
library(reshape2)
library(piecewiseSEM)
library(LambertW)
library(nnet)
library(DAAG)
library(relaimpo)
library(caret)
library(cvTools)
library(VGAM)
library(lmtest)
library(languageR)
library(stringr)
library(covTest)
source('R/LM_FUNCS.R')
# CONSTANTS
pattern_prefix = 'NSFA_'
to_factor = c('RID','ad_prior','ad_post','positive_prior','positive_post',
'diag_prior','diag_post','APOE4_BIN','APOE2_BIN','Gender',
'Diag.AV45','Diag.AV1451','positive_prior','positive_post',
'AV45_NONTP_wcereb_BIN1.11')
to_standardize = c('CORTICAL_SUMMARY_prior','Age.AV45','Edu..Yrs.')
demog_columns = c('RID','APOE4_BIN','Diag.AV45','Age.AV45','Gender','Edu..Yrs.')
av45_columns = c('CORTICAL_SUMMARY_prior')
#target = "CORTICAL_SUMMARY_change"
#target = "UW_EF_AV45_1"
#target = "UW_EF_slope"
#target = "ADAS_AV45_1"
#target = "ADASslope_postAV45"
#target = "AVLT_AV45_1"
#target = "AVLT_slope_postAV45"
#target = "UW_MEM_AV45_1"
#target = "UW_MEM_slope"
#target = "CSF_ABETA_closest_AV45_1"
#target = "CSF_TAU_closest_AV45_1"
#target = "CSF_PTAU_closest_AV45_1"
target = 'MMSE_AV45_1'
#output_folder = 'R/output/'
output_folder = 'R/output_all_diag/'
output_folder = 'R/output_neg_emci/'
positive_value=1
valid_diags = c('N','SMC','EMCI','LMCI','AD')
#valid_diags = c('N')
#valid_diags = c('EMCI')
#valid_diags = c('LMCI')
#time_col_prefix = 'TIMEpostAV45_ADAS'
#value_col_prefix = 'ADAScog'
#time_col_prefix = 'TIMEpostAV45_AVLT.'
#value_col_prefix = 'AVLT.'
#time_col_prefix = 'WMH_postAV45.'
#value_col_prefix = 'WMH_percentOfICV.'
time_col_prefix = 'UW_EF_postAV45_'
value_col_prefix = 'UW_EF_'
# IMPORT
df_av45 = read.csv('nsfa/av45_pattern_dataset.csv')
non.na = complete.cases(df_av45[,c(demog_columns,av45_columns,target)])
df_av45 = df_av45[non.na,]
# filter by diag or postivity
demog_columns
table(df_av45$APOE4_BIN)
df_av45$Edu..Yrs.
mean(df_av45$Edu..Yrs.)
st(df_av45$Edu..Yrs.)
sd(df_av45$Edu..Yrs.)
table(df_av45$AV45_NONTP_wcereb_BIN1.11)
df_rois = read.csv('nsfa/av1451_roi_comparisons.csv')
df_rois = read.csv('nsfa/av1451_roi_comparisons.csv')
names(df_rois)
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
library(reshape2)
library(piecewiseSEM)
library(LambertW)
library(nnet)
library(DAAG)
library(relaimpo)
library(caret)
library(cvTools)
library(VGAM)
library(lmtest)
library(languageR)
library(stringr)
library(Jmisc)
source('R/LM_FUNCS.R')
# CONSTANTS
pattern_prefix = 'NSFA_'
to_factor = c('RID','ad_prior','ad_post','positive_prior','positive_post',
'diag_prior','diag_post','APOE4_BIN','APOE2_BIN','Gender',
'Diag.AV45','Diag.AV1451','positive_prior','positive_post',
'AV45_NONTP_wcereb_BIN1.11','AV45_NONTP_2_wcereb_BIN1.11',
'AV45_NONTP_3_wcereb_BIN1.11')
to_standardize = c('Age.AV45','Edu..Yrs.')
demog_columns = c('RID','APOE4_BIN','Diag.AV1451','Age.AV1451','Gender','Edu..Yrs.')
diag_columns = c('Diag.AV45','Diag.AV1451')
braak_columns = c('AV1451_Braak1_CerebGray_BL',
'AV1451_Braak2_CerebGray_BL',
'AV1451_Braak3_CerebGray_BL',
'AV1451_Braak4_CerebGray_BL',
'AV1451_Braak5_CerebGray_BL',
'AV1451_Braak6_CerebGray_BL')
#target = "UW_EF_AV1451_1"
target = "UW_MEM_AV1451_1"
#target = "ADAS_AV1451_1"
#target = "AVLT_AV1451_1"
output_folder = 'R/output_av1451/'
valid_diags = c('N','SMC','EMCI','LMCI','AD')
#valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('N','SMC')
#valid_diags = c('EMCI')
#valid_diags = c('LMCI')
# IMPORT
df_av1451 = read.csv('nsfa/av1451_pattern_dataset.csv')
pattern_columns = Filter(isPatternColumn,names(df_av1451))
naive_columns = Filter(isNaiveColumn,names(df_av1451))
non.na = complete.cases(df_av1451[,c(demog_columns,braak_columns,target)])
df_av1451 = df_av1451[non.na,]
for (i in names(df_av1451)){
if (i %in% to_factor){
df_av1451[,eval(i)] = as.factor(as.character(df_av1451[,eval(i)]))
}
}
table(df_av1451$Diag.AV1451)
df_av1451 = df_av1451[which(df_av1451$Diag.AV1451 %in% valid_diags),]
table(df_av1451$Diag.AV1451)
table(df_av1451$Gender)
mean(df_av1451$Age.AV1451)
sd(df_av1451$Age.AV1451)
table(df_av1451$APOE4_BIN
)
mean(df_av1451$Edu..Yrs.)
sd(df_av1451$Edu..Yrs.)
df_rois = read.csv('nsfa/av1451_roi_comparisons.csv')
df_rois = read.csv('nsfa/av1451uni_roi_comparisons.csv')
p = ggplot(df_rois,aes(x=FACTOR,y=varperc))
print(p)
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_line()
print(p)
region_order = c('FRONTAL','PARIETAL','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','CINGULATE','BASALGANGLIA','LIMBIC',
'THALAMUS','CEREBRAL_WHITE','CEREBELLUM_GRAY','CEREBELLUM_WHITE')
melt(df_rois,id.vars='FACTOR',measure.vars=region_order)
df_rois.long = melt(df_rois,id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point()
print(p)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50'))
print(p)
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_line()
print(p)
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_point()
print(p)
df_rois[order(varperc)]
df_rois[order(df_rois$varperc)]
df_rois[order(df_rois$varperc),]
df_rois[order(-df_rois$varperc),]
df_rois.ordered = df_rois[order(-df_rois$varperc),]
df_rois.ordered[df_rois.ordered$varperc > 0.05]
df_rois.ordered[df_rois.ordered$varperc > 0.05,]
df_rois.ordered[df_rois.ordered$varperc > 0.05,"FACTOR"]
best_factors = df_rois.ordered[df_rois.ordered$varperc > 0.05,"FACTOR"]
best_factors
as.list(best_fators)
as.list(best_factors)
df_rois.long = melt(df_rois[df_rois$FACTOR.isin(best_factors)],id.vars='FACTOR',measure.vars=region_order)
df_rois[df_rois$FACTOR.isin(best_factors)]
df_rois[df_rois$FACTOR.isin(best_factors)]
df_rois$FACTOR.isin(best_factors)
df_rois[df_rois$FACTOR %in% best_factors]
df_rois[df_rois$FACTOR %in% best_factors,]
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50'))
print(p)
df_rois = read.csv('nsfa/av1451uni_roi_comparisons.csv')
df_rois.ordered = df_rois[order(-df_rois$varperc),]
best_factors = df_rois.ordered[df_rois.ordered$varperc > 0.1,"FACTOR"]
region_order = c('FRONTAL','PARIETAL','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','CINGULATE','BASALGANGLIA','LIMBIC',
'THALAMUS','CEREBRAL_WHITE','CEREBELLUM_GRAY','CEREBELLUM_WHITE')
# plot sum of squared loadings
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_point()
print(p)
# plot regional loading lines
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50'))
print(p)
df_rois = read.csv('nsfa/av1451uni_roi_comparisons.csv')
df_rois.ordered = df_rois[order(-df_rois$varperc),]
best_factors = df_rois.ordered[df_rois.ordered$varperc > 0.15,"FACTOR"]
region_order = c('FRONTAL','PARIETAL','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','CINGULATE','BASALGANGLIA','LIMBIC',
'THALAMUS','CEREBRAL_WHITE','CEREBELLUM_GRAY','CEREBELLUM_WHITE')
# plot sum of squared loadings
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_point()
print(p)
# plot regional loading lines
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50'))
print(p)
braak_order = c('BRAAK1','BRAAK2','BRAAK3','BRAAK4','BRAAK5','BRAAK6')
df_rois.braak = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=braak_order)
p = ggplot(df_rois.braak,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50'))
print(p)
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Florbetapir Uptake, by Pattern') +
xlab('Brain regions') +
ylab('Sum of loading coefficients')
print(p)
# print braak loading lines
df_rois.braak = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=braak_order)
p = ggplot(df_rois.braak,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Florbetapir Uptake, by Pattern') +
xlab('Non-cumulative Braak regions') +
ylab('Sum of loading coefficients')
print(p)
df_rois.braak = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=braak_order)
p = ggplot(df_rois.braak,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Braak Region Loadings, by Factor') +
xlab('Non-cumulative Braak regions') +
ylab('Sum of loading coefficients')
print(p)
# df_rois = read.csv('nsfa/av1451uni_roi_comparisons.csv')
df_rois = read.csv('nsfa/av45_roi_comparisons.csv')
df_rois.ordered = df_rois[order(-df_rois$varperc),]
best_factors = df_rois.ordered[df_rois.ordered$varperc > 0.15,"FACTOR"]
region_order = c('FRONTAL','PARIETAL','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','CINGULATE','BASALGANGLIA','LIMBIC',
'THALAMUS','CEREBRAL_WHITE','CEREBELLUM_GRAY','CEREBELLUM_WHITE')
braak_order = c('BRAAK1','BRAAK2','BRAAK3','BRAAK4','BRAAK5','BRAAK6')
# plot sum of squared loadings
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_point()
print(p)
# plot regional loading lines
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Loadings, by Factor') +
xlab('Brain regions') +
ylab('Sum of loading coefficients')
print(p)
# print braak loading lines
df_rois.braak = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=braak_order)
p = ggplot(df_rois.braak,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Braak Region Loadings, by Factor') +
xlab('Non-cumulative Braak regions') +
ylab('Sum of loading coefficients')
print(p)
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
geom_hline() +
ggtitle('Regional Loadings, by Factor') +
xlab('Brain regions') +
ylab('Sum of loading coefficients')
print(p)
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
geom_hline(aes(yintercept=0.0)) +
ggtitle('Regional Loadings, by Factor') +
xlab('Brain regions') +
ylab('Sum of loading coefficients')
print(p)
df_roi$varperc
df_rois$varperc
# df_rois = read.csv('nsfa/av1451uni_roi_comparisons.csv')
df_rois = read.csv('nsfa/av45_roi_comparisons.csv')
df_rois.ordered = df_rois[order(-df_rois$varperc),]
best_factors = df_rois.ordered[df_rois.ordered$varperc > 0.05,"FACTOR"]
region_order = c('FRONTAL','PARIETAL','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','CINGULATE','BASALGANGLIA','LIMBIC',
'THALAMUS','CEREBRAL_WHITE','CEREBELLUM_GRAY','CEREBELLUM_WHITE')
braak_order = c('BRAAK1','BRAAK2','BRAAK3','BRAAK4','BRAAK5','BRAAK6')
# plot sum of squared loadings
p = ggplot(df_rois,aes(x=FACTOR,y=varperc)) +
geom_point()
print(p)
# plot regional loading lines
df_rois.long = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=region_order)
p = ggplot(df_rois.long,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
geom_hline(aes(yintercept=0.0)) +
ggtitle('Regional Loadings, by Factor') +
xlab('Brain regions') +
ylab('Sum of loading coefficients')
print(p)
# print braak loading lines
df_rois.braak = melt(df_rois[df_rois$FACTOR %in% best_factors,],id.vars='FACTOR',measure.vars=braak_order)
p = ggplot(df_rois.braak,aes_string(x='variable',y='value', color='FACTOR')) +
geom_line(aes_string(group='FACTOR')) +
geom_point() +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
geom_hline(aes(yintercept=0.0)) +
ggtitle('Braak Region Loadings, by Factor') +
xlab('Non-cumulative Braak regions') +
ylab('Sum of loading coefficients')
print(p)
df_rois$varperc
