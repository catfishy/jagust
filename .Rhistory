method = 'LGOCV',
number = 10)
set.seed(1337)
rfe.output = rfe(x,
y,
sizes = c(min_size:ncol(x)),
rfeControl = ctrl,
metric = 'RMSE')
rfe.output
}
rfe.pattern = run.rfe(pattern_form, target, df_av1451, 2)
run.rfe = function(form, var.response, dataset, min_size) {
x = as.data.frame(model.matrix(as.formula(form),dataset))[,-1]
nzv_cols = nearZeroVar(x)
if (length(nzv_cols) > 0) {
x = x[, -nzv_cols]
}
corr_cols = findCorrelation(cor(x),.9)
if (length(corr_cols) > 0) {
x = x[, -corr_cols]
}
colnames(x) = lapply(colnames(x), make.names)
rownames(x) = NULL
y = as.numeric(df_av1451[,var.response])
#   ctrl = rfeControl(functions = lmFuncs,
#                     method = "repeatedcv",
#                     number = 10,
#                     repeats = 5,
#                     rerank = TRUE,
#                     verbose = FALSE)
ctrl = rfeControl(functions = lmFuncs,
method = 'LGOCV',
number = 10,
rerank = TRUE)
set.seed(1337)
rfe.output = rfe(x,
y,
sizes = c(min_size:ncol(x)),
rfeControl = ctrl,
metric = 'RMSE')
rfe.output
}
rfe.pattern = run.rfe(pattern_form, target, df_av1451, 2)
rfe.pattern
rfe.braak = run.rfe(braak_form, target, df_av1451, 2)
target
rfe.braak
fm_base = rfe.base$fit
fm_braak = rfe.braak$fit
fm_pattern = rfe.pattern$fit
fm_base.summary = summary(fm_base)
fm_braak.summary = summary(fm_braak)
fm_pattern.summary = summary(fm_pattern)
fm_braak.summary
fm_pattern.summary
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
library(reshape2)
library(piecewiseSEM)
library(LambertW)
library(nnet)
library(DAAG)
library(relaimpo)
library(caret)
library(cvTools)
library(VGAM)
library(lmtest)
library(languageR)
library(stringr)
source('R/LM_FUNCS.R')
# CONSTANTS
pattern_prefix = 'NSFA_'
to_factor = c('RID','ad_prior','ad_post','positive_prior','positive_post',
'diag_prior','diag_post','APOE4_BIN','APOE2_BIN','Gender',
'Diag.AV45','Diag.AV1451','positive_prior','positive_post',
'AV45_NONTP_wcereb_BIN1.11','AV45_NONTP_2_wcereb_BIN1.11',
'AV45_NONTP_3_wcereb_BIN1.11')
demog_columns = c('RID','APOE4_BIN','Diag.AV1451','Age.AV1451','Gender','Edu..Yrs.')
#target = "UW_EF_AV1451_1"
target = "UW_MEM_AV1451_1"
#target = "ADAS_AV1451_1"
#target = "AVLT_AV1451_1"
output_folder = 'R/output_av1451/'
valid_diags = c('N','SMC','EMCI','LMCI','AD')
#valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('N','SMC')
#valid_diags = c('EMCI')
#valid_diags = c('LMCI')
# IMPORT
df_av1451 = read.csv('nsfa/av1451_pattern_dataset.csv')
pattern_columns = Filter(isPatternColumn,names(df_av1451))
df_av1451 = df_av1451[which(df_av1451$Diag.AV1451 %in% valid_diags),]
for (i in names(df_av1451)){
if (i %in% to_factor){
df_av1451[,eval(i)] = as.factor(as.character(df_av1451[,eval(i)]))
}
}
# look at histograms
# for (pcol in pattern_columns) {
#   p = ggplot(df_av1451, aes_string(pcol)) + geom_histogram(binwidth=0.1)
#   print(p)
# }
# make crossx response normal
non.na = complete.cases(df_av1451[,c(demog_columns,target)])
df_av1451 = df_av1451[non.na,]
df_av1451[,eval(target)] = Gaussianize(df_av1451[,eval(target)], type='hh', method='MLE', return.u=TRUE)
run.rfe = function(form, var.response, dataset, min_size) {
x = as.data.frame(model.matrix(as.formula(form),dataset))[,-1]
nzv_cols = nearZeroVar(x)
if (length(nzv_cols) > 0) {
x = x[, -nzv_cols]
}
corr_cols = findCorrelation(cor(x),.9)
if (length(corr_cols) > 0) {
x = x[, -corr_cols]
}
colnames(x) = lapply(colnames(x), make.names)
rownames(x) = NULL
y = as.numeric(df_av1451[,var.response])
#   ctrl = rfeControl(functions = lmFuncs,
#                     method = "repeatedcv",
#                     number = 10,
#                     repeats = 5,
#                     rerank = TRUE,
#                     verbose = FALSE)
ctrl = rfeControl(functions = lmFuncs,
method = 'LGOCV',
number = 10,
rerank = TRUE)
set.seed(1337)
rfe.output = rfe(x,
y,
sizes = c(min_size:ncol(x)),
rfeControl = ctrl,
metric = 'Rsquared')
rfe.output
}
# LM RFE
all.addons = lapply(pattern_columns,lm.addvar)
addons_form = str_replace(paste(target,"~",paste(all.addons,collapse=' ')),"\\+ ","")
diag_str = 'Diag.AV1451*APOE4_BIN +'
#diag_str = 'Diag.AV1451 +'
base_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN")
braak_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + AV1451_PVC_Braak12_CerebGray_BL + AV1451_PVC_Braak34_CerebGray_BL + AV1451_PVC_Braak56_CerebGray_BL")
onlypattern_form = paste(target,"~",paste(pattern_columns,collapse=' + '))
pattern_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + ",paste(pattern_columns,collapse=' + '))
# rfe.onlypattern = run.rfe(onlypattern_form, target, df_av1451, 2)
# optvars = rfe.onlypattern$optVariables
# pattern_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN +",paste(optvars,collapse=' + '))
# fm_base = lm(as.formula(base_form),data=df_av1451)
# fm_braak = lm(as.formula(braak_form),data=df_av1451)
# fm_pattern = lm(as.formula(pattern_form),data=df_av1451)
rfe.base = run.rfe(base_form, target, df_av1451, 1)
rfe.braak = run.rfe(braak_form, target, df_av1451, 1)
rfe.pattern = run.rfe(pattern_form, target, df_av1451, 1)
fm_base = rfe.base$fit
fm_braak = rfe.braak$fit
fm_pattern = rfe.pattern$fit
fm_base.summary = summary(fm_base)
fm_braak.summary = summary(fm_braak)
fm_pattern.summary = summary(fm_pattern)
fm_base.fit = sem.model.fits(fm_base)
fm_braak.fit = sem.model.fits(fm_braak)
fm_pattern.fit = sem.model.fits(fm_pattern)
rfe.base = run.rfe(base_form, target, df_av1451, 2)
rfe.braak = run.rfe(braak_form, target, df_av1451, 2)
rfe.pattern = run.rfe(pattern_form, target, df_av1451, 2)
fm_base = rfe.base$fit
fm_braak = rfe.braak$fit
fm_pattern = rfe.pattern$fit
fm_base.summary = summary(fm_base)
fm_braak.summary = summary(fm_braak)
fm_pattern.summary = summary(fm_pattern)
fm_base.fit = sem.model.fits(fm_base)
fm_braak.fit = sem.model.fits(fm_braak)
fm_pattern.fit = sem.model.fits(fm_pattern)
fm_braak.fit
fm_pattern.fit
target
fm_braak.summary
fm_pattern.summary
braak_form
optvars = c('NSFA_2','NSFA_1','NSFA_6','NSFA_7')
base_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN")
braak_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + AV1451_PVC_Braak12_CerebGray_BL + AV1451_PVC_Braak34_CerebGray_BL + AV1451_PVC_Braak56_CerebGray_BL")
pattern_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN +",paste(optvars,collapse=' + '))
fm_base = lm(as.formula(base_form),data=df_av1451)
fm_braak = lm(as.formula(braak_form),data=df_av1451)
fm_pattern = lm(as.formula(pattern_form),data=df_av1451)
base_form
braak_form
pattern_form
fm_base.summary = summary(fm_base)
fm_braak.summary = summary(fm_braak)
fm_pattern.summary = summary(fm_pattern)
fm_base.fit = sem.model.fits(fm_base)
fm_braak.fit = sem.model.fits(fm_braak)
fm_pattern.fit = sem.model.fits(fm_pattern)
fm_base.fit
fm_braak.fit
fm_pattern.fit
fm_braak.summary
fm_pattern.summary
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
library(reshape2)
library(piecewiseSEM)
library(LambertW)
library(nnet)
library(DAAG)
library(relaimpo)
library(caret)
library(cvTools)
library(VGAM)
library(lmtest)
library(languageR)
library(stringr)
source('R/LM_FUNCS.R')
# CONSTANTS
pattern_prefix = 'NSFA_'
to_factor = c('RID','ad_prior','ad_post','positive_prior','positive_post',
'diag_prior','diag_post','APOE4_BIN','APOE2_BIN','Gender',
'Diag.AV45','Diag.AV1451','positive_prior','positive_post',
'AV45_NONTP_wcereb_BIN1.11','AV45_NONTP_2_wcereb_BIN1.11',
'AV45_NONTP_3_wcereb_BIN1.11')
demog_columns = c('RID','APOE4_BIN','Diag.AV1451','Age.AV1451','Gender','Edu..Yrs.')
#target = "UW_EF_AV1451_1"
target = "UW_MEM_AV1451_1"
#target = "ADAS_AV1451_1"
#target = "AVLT_AV1451_1"
output_folder = 'R/output_av1451/'
valid_diags = c('N','SMC','EMCI','LMCI','AD')
#valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('N','SMC')
#valid_diags = c('EMCI')
#valid_diags = c('LMCI')
# IMPORT
df_av1451 = read.csv('nsfa/av1451_pattern_dataset.csv')
pattern_columns = Filter(isPatternColumn,names(df_av1451))
df_av1451 = df_av1451[which(df_av1451$Diag.AV1451 %in% valid_diags),]
for (i in names(df_av1451)){
if (i %in% to_factor){
df_av1451[,eval(i)] = as.factor(as.character(df_av1451[,eval(i)]))
}
}
# look at histograms
# for (pcol in pattern_columns) {
#   p = ggplot(df_av1451, aes_string(pcol)) + geom_histogram(binwidth=0.1)
#   print(p)
# }
# make crossx response normal
non.na = complete.cases(df_av1451[,c(demog_columns,target)])
df_av1451 = df_av1451[non.na,]
df_av1451[,eval(target)] = Gaussianize(df_av1451[,eval(target)], type='hh', method='MLE', return.u=TRUE)
run.rfe = function(form, var.response, dataset, min_size) {
x = as.data.frame(model.matrix(as.formula(form),dataset))[,-1]
nzv_cols = nearZeroVar(x)
if (length(nzv_cols) > 0) {
x = x[, -nzv_cols]
}
corr_cols = findCorrelation(cor(x),.9)
if (length(corr_cols) > 0) {
x = x[, -corr_cols]
}
colnames(x) = lapply(colnames(x), make.names)
rownames(x) = NULL
y = as.numeric(df_av1451[,var.response])
#   ctrl = rfeControl(functions = lmFuncs,
#                     method = "repeatedcv",
#                     number = 10,
#                     repeats = 5,
#                     rerank = TRUE,
#                     verbose = FALSE)
ctrl = rfeControl(functions = lmFuncs,
method = 'LGOCV',
number = 10,
rerank = TRUE)
set.seed(1337)
rfe.output = rfe(x,
y,
sizes = c(min_size:ncol(x)),
rfeControl = ctrl,
metric = 'Rsquared')
rfe.output
}
# LM RFE
all.addons = lapply(pattern_columns,lm.addvar)
addons_form = str_replace(paste(target,"~",paste(all.addons,collapse=' ')),"\\+ ","")
diag_str = 'Diag.AV1451*APOE4_BIN +'
#diag_str = 'Diag.AV1451 +'
base_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN")
braak_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + AV1451_PVC_Braak12_CerebGray_BL + AV1451_PVC_Braak34_CerebGray_BL + AV1451_PVC_Braak56_CerebGray_BL")
onlypattern_form = paste(target,"~",paste(pattern_columns,collapse=' + '))
pattern_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + ",paste(pattern_columns,collapse=' + '))
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
library(reshape2)
library(piecewiseSEM)
library(LambertW)
library(nnet)
library(DAAG)
library(relaimpo)
library(caret)
library(cvTools)
library(VGAM)
library(lmtest)
library(languageR)
library(stringr)
source('R/LM_FUNCS.R')
# CONSTANTS
pattern_prefix = 'NSFA_'
to_factor = c('RID','ad_prior','ad_post','positive_prior','positive_post',
'diag_prior','diag_post','APOE4_BIN','APOE2_BIN','Gender',
'Diag.AV45','Diag.AV1451','positive_prior','positive_post',
'AV45_NONTP_wcereb_BIN1.11','AV45_NONTP_2_wcereb_BIN1.11',
'AV45_NONTP_3_wcereb_BIN1.11')
demog_columns = c('RID','APOE4_BIN','Diag.AV1451','Age.AV1451','Gender','Edu..Yrs.')
#target = "UW_EF_AV1451_1"
target = "UW_MEM_AV1451_1"
#target = "ADAS_AV1451_1"
#target = "AVLT_AV1451_1"
output_folder = 'R/output_av1451/'
valid_diags = c('N','SMC','EMCI','LMCI','AD')
#valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('N','SMC')
#valid_diags = c('EMCI')
#valid_diags = c('LMCI')
# IMPORT
df_av1451 = read.csv('nsfa/av1451_pattern_dataset.csv')
pattern_columns = Filter(isPatternColumn,names(df_av1451))
df_av1451 = df_av1451[which(df_av1451$Diag.AV1451 %in% valid_diags),]
for (i in names(df_av1451)){
if (i %in% to_factor){
df_av1451[,eval(i)] = as.factor(as.character(df_av1451[,eval(i)]))
}
}
lm(NSFA_1 ~ Age.AV1451)
lm(NSFA_1 ~ Age.AV1451,data=df_av1451)
summary(lm(NSFA_1 ~ Age.AV1451,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN + Edu..Yrs.,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN + Diag.AV1451,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN + UW_MEM_AV1451_1,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_0 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_2 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_6 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_7 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_5 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_2 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_1 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_6 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_7 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_5 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_0 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_4 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_10 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_8 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_9 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_ ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
summary(lm(NSFA_3 ~ Age.AV1451 + APOE4_BIN,data=df_av1451))
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
library(reshape2)
library(piecewiseSEM)
library(LambertW)
library(nnet)
library(DAAG)
library(relaimpo)
library(caret)
library(cvTools)
library(VGAM)
library(lmtest)
library(languageR)
library(stringr)
source('R/LM_FUNCS.R')
# CONSTANTS
pattern_prefix = 'NSFA_'
to_factor = c('RID','ad_prior','ad_post','positive_prior','positive_post',
'diag_prior','diag_post','APOE4_BIN','APOE2_BIN','Gender',
'Diag.AV45','Diag.AV1451','positive_prior','positive_post',
'AV45_NONTP_wcereb_BIN1.11','AV45_NONTP_2_wcereb_BIN1.11',
'AV45_NONTP_3_wcereb_BIN1.11')
demog_columns = c('RID','APOE4_BIN','Diag.AV1451','Age.AV1451','Gender','Edu..Yrs.')
#target = "UW_EF_AV1451_1"
target = "UW_MEM_AV1451_1"
#target = "ADAS_AV1451_1"
#target = "AVLT_AV1451_1"
output_folder = 'R/output_av1451/'
valid_diags = c('N','SMC','EMCI','LMCI','AD')
#valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('N','SMC')
#valid_diags = c('EMCI')
#valid_diags = c('LMCI')
# IMPORT
df_av1451 = read.csv('nsfa/av1451_pattern_dataset.csv')
pattern_columns = Filter(isPatternColumn,names(df_av1451))
df_av1451 = df_av1451[which(df_av1451$Diag.AV1451 %in% valid_diags),]
for (i in names(df_av1451)){
if (i %in% to_factor){
df_av1451[,eval(i)] = as.factor(as.character(df_av1451[,eval(i)]))
}
}
# look at histograms
# for (pcol in pattern_columns) {
#   p = ggplot(df_av1451, aes_string(pcol)) + geom_histogram(binwidth=0.1)
#   print(p)
# }
# make crossx response normal
non.na = complete.cases(df_av1451[,c(demog_columns,target)])
df_av1451 = df_av1451[non.na,]
df_av1451[,eval(target)] = Gaussianize(df_av1451[,eval(target)], type='hh', method='MLE', return.u=TRUE)
run.lasso = function(form, datatset) {
set.seed(825)
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
model <- train(form, data = dataset,
method='lasso',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
coefs = predict.enet(model$finalModel, type='coefficients', s=lasso$bestTune$fraction, mode='fraction')
#coefs = predict(model$finalModel, type='coef', mode='norm')$coefficients[19,]
}
# LM RFE
all.addons = lapply(pattern_columns,lm.addvar)
addons_form = str_replace(paste(target,"~",paste(all.addons,collapse=' ')),"\\+ ","")
diag_str = 'Diag.AV1451*APOE4_BIN +'
#diag_str = 'Diag.AV1451 +'
base_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN")
braak_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + AV1451_PVC_Braak12_CerebGray_BL + AV1451_PVC_Braak34_CerebGray_BL + AV1451_PVC_Braak56_CerebGray_BL")
onlypattern_form = paste(target,"~",paste(pattern_columns,collapse=' + '))
pattern_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + ",paste(pattern_columns,collapse=' + '))
pattern_form
set.seed(825)
fitControl <- trainControl(method = "cv",
number = 10)
model = train(pattern_form, data=df_av1451, method='lasso', trControl = fitControl, preProcess=c('center','scale'))
pattern_form
train
model = train(as.formula(pattern_form), data=df_av1451, method='lasso', trControl = fitControl, preProcess=c('center','scale'))
model = train(as.formula(pattern_form), data=df_av1451, method='lasso', trControl = fitControl, preProcess=c('center','scale'))
diag_str = 'Diag.AV1451 +'
pattern_form = paste(target,"~",diag_str,"Age.AV1451 + Gender + Edu..Yrs. + APOE4_BIN + ",paste(pattern_columns,collapse=' + '))
model = train(as.formula(pattern_form), data=df_av1451, method='lasso', trControl = fitControl, preProcess=c('center','scale'))
model
form  = pattern_form
dataset= df_av1451
lambdaGrid = expand.grid(lambda = 10^seq(10, -2, length=100))
model = train(as.formula(form), data = dataset,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
model
predict(model$finalModel)
predict(model$finalModel, type='coef')
predict(model$finalModel, type='coef', mode='norm')
predict(model$finalModel, type='coef', mode='norm')$coefficients
predict(model$finalModel, type='coef', mode='norm')$coefficients[19,]
