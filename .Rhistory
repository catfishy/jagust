table(df_av45$group)
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
isPatternColumn = function(i){
if (startsWith(i,'X')) return(TRUE) else return(FALSE)
}
isPatternColumn = Vectorize(isPatternColumn)
# Import data
df_av45 = read.csv('dpgmm_alpha12.66_bilateral_AV45_ALL_longdata_slope.csv')
pattern_columns = Filter(isPatternColumn,names(df_av45))
df_patterns = df_av45[pattern_columns]
# demean pattern variables + binary variables
# bin_variables = c('Gender','CORTICAL_SUMMARY_POSITIVE','APOE2_BIN','APOE4_BIN')
# pattern_columns = c()
# for (i in names(df_av45)){
#   if (startsWith(i,'X') | i %in% bin_variables){
#     df_av45[,eval(i)] = (df_av45[,eval(i)] * 2) - 1.0
#   }
# }
# Run PCA
df_patterns.pca = prcomp(df_patterns, center=TRUE, scale.s=TRUE)
df_patterns.pca_rotation = df_patterns.pca$rotation
df_patterns.transformed = predict(df_patterns.pca)
df_av45 = as.data.frame(cbind(as.matrix(df_av45),df_patterns.transformed))
# Convert to non factors to floats
to_factor = c('RID','diag_prior','APOE4_BIN','APOE2_BIN','Gender')
for (i in names(df_av45)){
if (!(i %in% to_factor)){
df_av45[,eval(i)] = as.numeric(as.character(df_av45[,eval(i)]))
}
}
# Only keep N/SMC/EMCI/LMCI
valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('EMCI','LMCI')
#valid_diags = c('N','SMC')
df_av45 = df_av45[which(df_av45$diag_prior %in% valid_diags),]
# Choose valid groups
group_desc = describeBy(df_av45$CORTICAL_SUMMARY_prior,df_av45$group)
# pattern weight models
fm_av45_onlycs = lm(CORTICAL_SUMMARY_slope ~ CORTICAL_SUMMARY_prior + I(CORTICAL_SUMMARY_prior^2), df_av45)
fm_av45_nopattern = lm(CORTICAL_SUMMARY_slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN + I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45 = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
CORTICAL_SUMMARY_prior*APOE4_BIN +
I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN +
X0*APOE4_BIN +
X1*APOE4_BIN +
X2*APOE4_BIN +
X3*APOE4_BIN +
X4*APOE4_BIN +
X4*APOE4_BIN +
X7*APOE4_BIN +
X8*APOE4_BIN +
X9*APOE4_BIN +
X12*APOE4_BIN +
X14*APOE4_BIN +
X15*APOE4_BIN +
X20*APOE4_BIN +
X23*APOE4_BIN +
X24*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_onlypatterns = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
X0*APOE4_BIN +
X1*APOE4_BIN +
X2*APOE4_BIN +
X3*APOE4_BIN +
X4*APOE4_BIN +
X4*APOE4_BIN +
X7*APOE4_BIN +
X8*APOE4_BIN +
X9*APOE4_BIN +
X12*APOE4_BIN +
X14*APOE4_BIN +
X15*APOE4_BIN +
X20*APOE4_BIN +
X23*APOE4_BIN +
X24*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_onlypca = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
PC1*APOE4_BIN +
PC2*APOE4_BIN +
PC3*APOE4_BIN +
PC4*APOE4_BIN +
PC5*APOE4_BIN +
PC6*APOE4_BIN +
PC7*APOE4_BIN +
PC8*APOE4_BIN +
PC9*APOE4_BIN +
PC10*APOE4_BIN +
PC11*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_pca = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
CORTICAL_SUMMARY_prior*APOE4_BIN +
I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN +
PC1*APOE4_BIN +
PC2*APOE4_BIN +
PC3*APOE4_BIN +
PC4*APOE4_BIN +
PC5*APOE4_BIN +
PC6*APOE4_BIN +
PC7*APOE4_BIN +
PC8*APOE4_BIN +
PC9*APOE4_BIN +
PC10*APOE4_BIN +
PC11*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
# summaries
fm_av45_nopattern_summary = summary(fm_av45_nopattern)
fm_av45_summary = summary(fm_av45)
fm_av45_onlypatterns_summary = summary(fm_av45_onlypatterns)
fm_av45_onlypca_summary = summary(fm_av45_onlypca)
fm_av45_pca_summary = summary(fm_av45_pca)
fm_av45_nopattern_summary$adj.r.squared
fm_av45_summary$adj.r.squared
fm_av45_onlypatterns_summary$adj.r.squared
fm_av45_onlypca_summary$adj.r.squared
fm_av45_pca_summary$adj.r.squared
fm_av45_nopattern_anova = Anova(fm_av45_nopattern,type='III')
fm_av45_anova = Anova(fm_av45,type='III')
fm_av45_onlypatterns_anova = Anova(fm_av45_onlypatterns,type='III')
fm_av45_anova
toplot = c(2,3)
# plot together
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
toplot = c(2,3,12,14,15,24)
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
df_av45[,'CORTICAL_SUMMARY_prior']
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
library(lme4)
library(coefplot2)
library(ggplot2)
library(lmerTest)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(sjPlot)
library(splines)
library(car)
library(stats)
library(gdata)
library(psych)
isPatternColumn = function(i){
if (startsWith(i,'X')) return(TRUE) else return(FALSE)
}
isPatternColumn = Vectorize(isPatternColumn)
# Import data
df_av45 = read.csv('dpgmm_alpha12.66_bilateral_AV45_ALL_longdata_slope.csv')
pattern_columns = Filter(isPatternColumn,names(df_av45))
df_patterns = df_av45[pattern_columns]
# demean pattern variables + binary variables
# bin_variables = c('Gender','CORTICAL_SUMMARY_POSITIVE','APOE2_BIN','APOE4_BIN')
# pattern_columns = c()
# for (i in names(df_av45)){
#   if (startsWith(i,'X') | i %in% bin_variables){
#     df_av45[,eval(i)] = (df_av45[,eval(i)] * 2) - 1.0
#   }
# }
# Run PCA
df_patterns.pca = prcomp(df_patterns, center=TRUE, scale.s=TRUE)
df_patterns.pca_rotation = df_patterns.pca$rotation
df_patterns.transformed = predict(df_patterns.pca)
df_av45 = as.data.frame(cbind(as.matrix(df_av45),df_patterns.transformed))
# Convert to non factors to floats
to_factor = c('RID','diag_prior','APOE4_BIN','APOE2_BIN','Gender')
for (i in names(df_av45)){
if (!(i %in% to_factor)){
df_av45[,eval(i)] = as.numeric(as.character(df_av45[,eval(i)]))
}
}
# Only keep N/SMC/EMCI/LMCI
valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('EMCI','LMCI')
#valid_diags = c('N','SMC')
df_av45 = df_av45[which(df_av45$diag_prior %in% valid_diags),]
# Choose valid groups
group_desc = describeBy(df_av45$CORTICAL_SUMMARY_prior,df_av45$group)
# pattern weight models
fm_av45_onlycs = lm(CORTICAL_SUMMARY_slope ~ CORTICAL_SUMMARY_prior + I(CORTICAL_SUMMARY_prior^2), df_av45)
fm_av45_nopattern = lm(CORTICAL_SUMMARY_slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN + I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45 = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
CORTICAL_SUMMARY_prior*APOE4_BIN +
I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN +
X0*APOE4_BIN +
X1*APOE4_BIN +
X2*APOE4_BIN +
X3*APOE4_BIN +
X4*APOE4_BIN +
X4*APOE4_BIN +
X7*APOE4_BIN +
X8*APOE4_BIN +
X9*APOE4_BIN +
X12*APOE4_BIN +
X14*APOE4_BIN +
X15*APOE4_BIN +
X20*APOE4_BIN +
X23*APOE4_BIN +
X24*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_onlypatterns = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
X0*APOE4_BIN +
X1*APOE4_BIN +
X2*APOE4_BIN +
X3*APOE4_BIN +
X4*APOE4_BIN +
X4*APOE4_BIN +
X7*APOE4_BIN +
X8*APOE4_BIN +
X9*APOE4_BIN +
X12*APOE4_BIN +
X14*APOE4_BIN +
X15*APOE4_BIN +
X20*APOE4_BIN +
X23*APOE4_BIN +
X24*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_onlypca = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
PC1*APOE4_BIN +
PC2*APOE4_BIN +
PC3*APOE4_BIN +
PC4*APOE4_BIN +
PC5*APOE4_BIN +
PC6*APOE4_BIN +
PC7*APOE4_BIN +
PC8*APOE4_BIN +
PC9*APOE4_BIN +
PC10*APOE4_BIN +
PC11*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_pca = lm(CORTICAL_SUMMARY_slope ~ diag_prior +
CORTICAL_SUMMARY_prior*APOE4_BIN +
I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN +
PC1*APOE4_BIN +
PC2*APOE4_BIN +
PC3*APOE4_BIN +
PC4*APOE4_BIN +
PC5*APOE4_BIN +
PC6*APOE4_BIN +
PC7*APOE4_BIN +
PC8*APOE4_BIN +
PC9*APOE4_BIN +
PC10*APOE4_BIN +
PC11*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
# summaries
fm_av45_nopattern_summary = summary(fm_av45_nopattern)
fm_av45_summary = summary(fm_av45)
fm_av45_onlypatterns_summary = summary(fm_av45_onlypatterns)
fm_av45_onlypca_summary = summary(fm_av45_onlypca)
fm_av45_pca_summary = summary(fm_av45_pca)
fm_av45_nopattern_summary$adj.r.squared
fm_av45_summary$adj.r.squared
fm_av45_onlypatterns_summary$adj.r.squared
fm_av45_onlypca_summary$adj.r.squared
fm_av45_pca_summary$adj.r.squared
fm_av45_summary
toplot = c(2,3)
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
toplot = c(2,3,12,14,15,24)
# plot together
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
fm_av45_summary
toplot = c(0,1,2,3,14,15)
# plot together
polfit = function(x) fm_av45_onlycs$coefficients[3]*x^2 + fm_av45_onlycs$coefficients[2]*x + fm_av45_onlycs$coefficients[1]
colors = rainbow(length(toplot))
plot(df_av45[,'CORTICAL_SUMMARY_prior'],df_av45[,'CORTICAL_SUMMARY_slope'], pch=4, cex=1, lwd=0.6, main='Significant Pattern Groups', xlab='Baseline Florbetapir Cortical Summary SUVR', ylab='Cortical Summary SUVR Annualized Change')
for(i in 1:length(toplot)){
g = toplot[i]
c = colors[i]
x = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_prior']
y = df_av45[which(df_av45$group==g),'CORTICAL_SUMMARY_slope']
points(x,y, bg=c, pch=21, cex=1.1, lwd=1)
}
curve(polfit,add=T)
legend('topright', legend=sapply(toplot, function(x) paste('Group #',x,sep='')), fill=colors)
library(ggplot2)
library(reshape2)
lobe_keys = c('FRONTAL','PARIETAL','CINGULATE','SENSORY','TEMPORAL','OCCIPITAL',
'MEDIALOCCIPITAL','BASALGANGLIA','LIMBIC','CEREBGM',
'BRAIN_STEM','CEREBWM','CEREBRAL_WHITE')
patterns = read.csv('dpgmm_alpha12.66_bilateral_pattern_means.csv')
patterns$pattern = factor(patterns$pattern)
patterns$pattern = with(patterns, paste0(pattern,' (',round(mean_suvr,2),')'))
patterns.m = melt(patterns, id.vars = c("pattern","mean_suvr"))
patterns.m$variable = as.character(patterns.m$variable)
patterns.m$variable = factor(patterns.m$variable, levels=lobe_keys)
patterns.m$pattern = factor(patterns.m$pattern, levels=(patterns.m$pattern)[order(patterns.m$mean_suvr)])
p = ggplot(patterns.m, aes(variable,pattern)) +
geom_tile(aes(fill=value)) +
scale_fill_gradient(low='white', high='dodgerblue', name='Total\nUptake\nContrib.') +
scale_x_discrete(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
theme(axis.ticks=element_line(),
plot.title=element_text(size=20),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.y=element_text(face='bold', size=14, angle=30),
axis.text.x=element_text(angle=300, face='bold', size=14, hjust=0, vjust=1, color='grey50')) +
ggtitle('Regional Contributions to Global Florbetapir Uptake, by Pattern') +
xlab('Brain Regions') +
ylab('Patterns (Avg. Cortical Summary SUVR)')
print(p)
library(lme4)
library(coefplot2)
library(ggplot2)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(car)
library(stats)
library(gdata)
library(ggbiplot)
isPatternColumn = function(i){
if (startsWith(i,'X')) return(TRUE) else return(FALSE)
}
isPatternColumn = Vectorize(isPatternColumn)
# Import data
df_av45 = read.csv('dpgmm_alpha12.66_bilateral_UW_MEM__ALL_slopedata.csv')
pattern_columns = Filter(isPatternColumn,names(df_av45))
df_patterns = df_av45[pattern_columns]
to_factor = c('RID','diag_prior','APOE4_BIN','APOE2_BIN','Gender')
for (i in names(df_av45)){
if (!(i %in% to_factor)){
df_av45[,eval(i)] = as.numeric(as.character(df_av45[,eval(i)]))
}
}
valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('EMCI','LMCI')
#valid_diags = c('N','SMC')
df_av45 = df_av45[which(df_av45$diag_prior %in% valid_diags),]
library(lme4)
library(coefplot2)
library(ggplot2)
library(pbkrtest)
library(multcomp)
library(contrast)
library(xtable)
library(car)
library(stats)
library(gdata)
library(ggbiplot)
isPatternColumn = function(i){
if (startsWith(i,'X')) return(TRUE) else return(FALSE)
}
isPatternColumn = Vectorize(isPatternColumn)
# Import data
df_av45 = read.csv('dpgmm_alpha12.66_bilateral_UW_MEM__ALL_slopedata.csv')
pattern_columns = Filter(isPatternColumn,names(df_av45))
df_patterns = df_av45[pattern_columns]
# # demean pattern variables + binary variables
# bin_variables = c('Gender','CORTICAL_SUMMARY_POSITIVE','APOE2_BIN','APOE4_BIN')
# pattern_columns = c()
# for (i in names(df_av45)){
#   if (startsWith(i,'X') | i %in% bin_variables){
#     df_av45[,eval(i)] = (df_av45[,eval(i)] * 2) - 1.0
#   }
# }
# Run PCA
df_patterns.pca = prcomp(df_patterns, center=TRUE, scale.s=TRUE)
df_patterns.pca_rotation = df_patterns.pca$rotation
df_patterns.transformed = predict(df_patterns.pca)
df_av45 = as.data.frame(cbind(as.matrix(df_av45),df_patterns.transformed))
# Convert to non factors to floats
to_factor = c('RID','diag_prior','APOE4_BIN','APOE2_BIN','Gender')
for (i in names(df_av45)){
if (!(i %in% to_factor)){
df_av45[,eval(i)] = as.numeric(as.character(df_av45[,eval(i)]))
}
}
# Only keep negatives
# df_av45 = df_av45[which(df_av45$CORTICAL_SUMMARY_POSITIVE == -1),]
# Only keep N/SMC/EMCI/LMCI
valid_diags = c('N','SMC','EMCI','LMCI')
#valid_diags = c('EMCI','LMCI')
#valid_diags = c('N','SMC')
df_av45 = df_av45[which(df_av45$diag_prior %in% valid_diags),]
# pattern weight models
fm_av45_onlycs = lm(UW_MEM__slope ~ CORTICAL_SUMMARY_prior + I(CORTICAL_SUMMARY_prior^2), df_av45)
fm_av45_nopattern = lm(UW_MEM__slope ~ diag_prior + CORTICAL_SUMMARY_prior*APOE4_BIN + I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN + Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45 = lm(UW_MEM__slope ~ diag_prior +
CORTICAL_SUMMARY_prior*APOE4_BIN +
I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN +
X0*APOE4_BIN +
X1*APOE4_BIN +
X2*APOE4_BIN +
X3*APOE4_BIN +
X4*APOE4_BIN +
X4*APOE4_BIN +
X7*APOE4_BIN +
X8*APOE4_BIN +
X9*APOE4_BIN +
X12*APOE4_BIN +
X14*APOE4_BIN +
X15*APOE4_BIN +
X20*APOE4_BIN +
X23*APOE4_BIN +
X24*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_onlypatterns = lm(UW_MEM__slope ~ diag_prior +
X0*APOE4_BIN +
X1*APOE4_BIN +
X2*APOE4_BIN +
X3*APOE4_BIN +
X4*APOE4_BIN +
X4*APOE4_BIN +
X7*APOE4_BIN +
X8*APOE4_BIN +
X9*APOE4_BIN +
X12*APOE4_BIN +
X14*APOE4_BIN +
X15*APOE4_BIN +
X20*APOE4_BIN +
X23*APOE4_BIN +
X24*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_onlypca = lm(UW_MEM__slope ~ diag_prior +
PC1*APOE4_BIN +
PC2*APOE4_BIN +
PC3*APOE4_BIN +
PC4*APOE4_BIN +
PC5*APOE4_BIN +
PC6*APOE4_BIN +
PC7*APOE4_BIN +
PC8*APOE4_BIN +
PC9*APOE4_BIN +
PC10*APOE4_BIN +
PC11*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
fm_av45_pca = lm(UW_MEM__slope ~ diag_prior +
CORTICAL_SUMMARY_prior*APOE4_BIN +
I(CORTICAL_SUMMARY_prior^2)*APOE4_BIN +
PC1*APOE4_BIN +
PC2*APOE4_BIN +
PC3*APOE4_BIN +
PC4*APOE4_BIN +
PC5*APOE4_BIN +
PC6*APOE4_BIN +
PC7*APOE4_BIN +
PC8*APOE4_BIN +
PC9*APOE4_BIN +
PC10*APOE4_BIN +
PC11*APOE4_BIN +
Age.AV45 + Gender + Edu..Yrs., df_av45)
# summaries
fm_av45_nopattern_summary = summary(fm_av45_nopattern)
fm_av45_summary = summary(fm_av45)
fm_av45_onlypatterns_summary = summary(fm_av45_onlypatterns)
fm_av45_onlypca_summary = summary(fm_av45_onlypca)
fm_av45_pca_summary = summary(fm_av45_pca)
fm_av45_nopattern_summary$adj.r.squared
fm_av45_summary$adj.r.squared
fm_av45_onlypatterns_summary$adj.r.squared
fm_av45_onlypca_summary$adj.r.squared
fm_av45_pca_summary$adj.r.squared
fm_av45_summary
